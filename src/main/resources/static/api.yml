openapi: 3.0.1
info:
  title: API para Controle de Pedidos - FIAP
  description: Documentação da API para o totem de autoatendimento.
  version: 1.0.0

paths:
  /api/v1/customers:
    post:
      tags:
        - Customers
      summary: Criar novo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDTO'
      responses:
        '201':
          description: Cliente criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '400':
          description: Requisição inválida (validação ou erro de negócio)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Customers
      summary: Listar clientes com paginação
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: size
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Lista de clientes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResponseCustomerDTO'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/customers/{cpf}:
    get:
      tags:
        - Customers
      summary: Buscar cliente por CPF
      parameters:
        - name: cpf
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cliente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '404':
          description: Cliente não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/customers/{id}:
    delete:
      tags:
        - Customers
      summary: Deletar cliente por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Cliente deletado com sucesso
        '404':
          description: Cliente não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/carts:
    post:
      tags:
        - Carts
      summary: Cria um novo carrinho e adiciona um item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCartRequest'
      responses:
        201:
          description: Carrinho criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponseDto'
        '400':
          description: Requisição inválida (validação ou erro de negócio)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/carts/{cartId}:
    get:
      tags:
        - Carts
      summary: Recupera o estado atual do carrinho
      parameters:
        - name: cartId
          in: path
          required: true
          description: Identificador único do carrinho (UUID)
          schema:
            type: string
      responses:
        '200':
          description: Carrinho encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponseDto'
        '404':
          description: Carrinho não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Carts
      summary: Limpa todos os itens de um carrinho
      parameters:
        - name: cartId
          in: path
          required: true
          description: Identificador único do carrinho (UUID)
          schema:
            type: string
      responses:
        '200':
          description: Carrinho esvaziado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponseDto'
        '404':
          description: Carrinho não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/carts/{cartId}/items:
    post:
      tags:
        - Carts
      summary: Adiciona um item a um carrinho existente
      parameters:
        - name: cartId
          in: path
          required: true
          description: Identificador único do carrinho (UUID)
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItemRequest'
      responses:
        200:
          description: Item adicionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponseDto'
        '400':
          description: Requisição inválida (validação ou erro de negócio)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/carts/{cartId}/items/{itemId}:
    patch:
      tags:
        - Carts
      summary: Atualiza quantidade de um item no carrinho
      parameters:
        - name: cartId
          in: path
          required: true
          description: Identificador único do carrinho (UUID)
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          description: Identificador único do produto a ser removido
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemQuantityRequest'
      responses:
        '200':
          description: Quantidade atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponseDto'
        '400':
          description: Requisição inválida (validação ou erro de negócio).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Carts
      summary: Remove um item de um carrinho existente
      parameters:
        - name: cartId
          in: path
          required: true
          description: Identificador único do carrinho (UUID)
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          description: Identificador único do produto a ser removido
          schema:
            type: string
      responses:
        '200':
          description: Item removido com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponseDto'
        '404':
          description: Carrinho ou produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/carts/{cartId}/identify:
    post:
      tags:
        - Carts
      summary: Associa customerId a um carrinho anônimo
      parameters:
        - name: cartId
          in: path
          required: true
          description: Identificador único do carrinho (UUID)
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartAssociateCustomerRequest'
      responses:
        '200':
          description: Carrinho atualizado com customerId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponseDto'
        '404':
          description: Carrinho não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflito – carrinho já possui um customer associado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /products:
    post:
      summary: Criar produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
      tags:
        - Products
    get:
      summary: Listar produtos (paginado)
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 0
        - in: query
          name: size
          schema:
            type: integer
            default: 20
        - in: query
          name: sort
          schema:
            type: string
            description: "Campos de ordenaço, separados por vírgula"
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResponseProductDTO'
      tags:
        - Products
  /products/{id}:
    get:
      summary: Buscar produto por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Produto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
      tags:
        - Products
    put:
      summary: Atualizar produto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
      responses:
        '200':
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
      tags:
        - Products
    delete:
      summary: Deletar produto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Produto deletado com sucesso
      tags:
        - Products
components:
  schemas:
    CustomerDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        cpf:
          type: string
          description: CPF válido
          example: 38968877009
        nome:
          type: string
          description: Nome do cliente
          example: Joaquim da Silva
        email:
          type: string
          format: email
          example: meuemail@gmail.com
          description: Email do cliente
      required:
        - cpf
        - nome
        - email
    PagedResponseCustomerDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CustomerDTO'
        pageable:
          type: object
        totalPages:
          type: integer
        totalElements:
          type: integer
        last:
          type: boolean
        first:
          type: boolean
        size:
          type: integer
        number:
          type: integer
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Mensagem de erro
        timestamp:
          type: string
          format: date-time
          description: Data e hora do erro
    CartItemResponseDto:
      type: object
      properties:
        productId:
          type: string
          description: Identificador único do produto
        name:
          type: string
        priceCents:
          type: number
          description: Nome do produto
        quantity:
          type: integer
          description: Quantidade do produto adicionada
        subtotalCents:
          type: number
          description: Subtotal em centavos (priceCents * quantity)N
    CreateItemRequest:
      type: object
      required:
        - productId
        - quantity
      properties:
        productId:
          type: string
          description: Identificador único do produto
        quantity:
          type: integer
          description: Quantidade do produto adicionada(>=1)
          minimum: 1
    CartResponseDto:
      type: object
      properties:
        cartId:
          type: string
          format: uuid
          description: Identificador único do carrinho (UUID)
        customerId:
          type: string
          format: uuid
          nullable: true
          description: ID do customer. Pode ser nulo para carrinho anônimo
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItemResponseDto'
        totalCents:
          type: integer
          description: Soma de todos os subtotalCents do carrinho
    CartAssociateCustomerRequest:
      type: object
      required:
        - customerId
      properties:
        customerId:
          type: string
          description: Identificador do cliente para associação ao carrinho
    UpdateItemQuantityRequest:
      type: integer
      required:
        - quantity
      properties:
        quantity:
          type: integer
          description: Quantidade mínima de itens adicionados ao carrinho
          minimum: 0
    CreateCartRequest:
      type: object
      required:
        - customerId
        - item
      properties:
        customerId:
          type: string
          description: Identificador único do cliente
          format: uuid
        item:
          type: object
          $ref: '#/components/schemas/CreateItemRequest'
    ProductDTO:
      type: object
      required:
        - name
        - price
        - category
        - description
      properties:
        id:
          type: string
          description: Identificador único do produto (UUID)
          format: uuid
        name:
          type: string
          description: Nome do produto
        price:
          type: integer
          description: Preço do produto
        category:
          type: string
          enum: [ LANCHE, ACOMPANHAMENTO, BEBIDA, SOBREMESA ]
          description: Categoria do produto (LANCHE, ACOMPANHAMENTO, BEBIDA, SOBREMESA)
        description:
          type: string
          description: Descrição dos itens que compõem o produto
        active:
          type: boolean
          description: Flag
        image:
          type: string
          description: Imagem do produto
    PagedResponseProductDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductDTO'
        pageable:
          type: object
        totalPages:
          type: integer
        totalElements:
          type: integer
        last:
          type: boolean
        first:
          type: boolean
        size:
          type: integer
        number:
          type: integer
tags:
  - name: Carts
    description: Endpoints para gerenciamento de carrinhos de compra.
  - name: Customers
    description: Endpoints para gerenciamento de clientes.
  - name: Products
    description: Endpoints para gerenciamento de produtos.